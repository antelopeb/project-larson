/* claro/form/Common.css */
/*========================= common css =========================*/
/* 'dijitTextBox' refers to 'dijit(TextBox|DateTextBox|CurrencyTextBox|...)' */
.larson .dijitTextBoxError .dijitValidationContainer {
  background-color: #d46464;
  background-image: url('images/error.png');
  background-position: top center;
  border: solid #d46464 0;
  border-left-width: 1px;
  width: 9px;
}
.larson .dijitTextBoxError .dijitValidationIcon {
  width: 0;
  background-color: transparent !important;
  /* so the INPUT doesn't obscure the border in rtl+a11y */

}
/* Padding for the input area of TextBox based widgets, and corresponding padding for the
 * down arrow button and the placeholder.   placeholder is explicitly listed  because
 * dijitPlaceHolder is absolutely positioned, so padding set on dijitInputField
 * won't affect it
 */
.larson .dijitTextArea, .larson .dijitInputField .dijitPlaceHolder {
  padding: 2px;
}
.larson .dijitTextBox .dijitInputField {
  padding: 1px 2px;
}
.dj_gecko .larson .dijitTextBox .dijitInputInner, .dj_webkit .larson .dijitTextBox .dijitInputInner {
  padding: 1px;
}
.larson .dijitTextBox, .larson .dijitTextBox .dijitButtonNode {
  /* color for (outer) border on *TextBox widgets, and border between input and buttons on ComboBox and Spinner */

  border-color: #999999;
  -webkit-transition-property: background-color, border;
  -moz-transition-property: background-color, border;
  transition-property: background-color, border;
  -webkit-transition-duration: 0.35s;
  -moz-transition-duration: 0.35s;
  transition-duration: 0.35s;
}
.larson .dijitTextBox {
  background-color: #ffffff;
}
/* hover */
.larson .dijitTextBoxHover, .larson .dijitTextBoxHover .dijitButtonNode {
  border-color: #999999;
  -webkit-transition-duration: 0.25s;
  -moz-transition-duration: 0.25s;
  transition-duration: 0.25s;
}
.larson .dijitTextBoxHover {
  background-color: #efefef;
  background-repeat: repeat-x;
}
/* error state */
.larson .dijitTextBoxError, .larson .dijitTextBoxError .dijitButtonNode {
  border-color: #d46464;
}
.larson .dijitTextBoxError, .larson .dijitTextBoxError .dijitInputContainer {
  background-color: #ffffff;
}
/* focused state */
.larson .dijitTextBoxFocused, .larson .dijitTextBoxFocused .dijitButtonNode {
  border-color: #999999;
  -webkit-transition-duration: 0.1s;
  -moz-transition-duration: 0.1s;
  transition-duration: 0.1s;
}
.larson .dijitTextBoxFocused {
  background-color: #ffffff;
  background-image: url('images/textBox_back.png');
  background-repeat: repeat-x;
}
.larson .dijitTextBoxFocused .dijitInputContainer {
  background: #ffffff;
}
.larson .dijitTextBoxErrorFocused, .larson .dijitTextBoxErrorFocused .dijitButtonNode {
  border-color: #ce4f4f;
}
/* disabled state */
.larson .dijitTextBoxDisabled, .larson .dijitTextBoxDisabled .dijitButtonNode {
  border-color: #d3d3d3;
}
.larson .dijitTextBoxDisabled, .larson .dijitTextBoxDisabled .dijitInputContainer {
  background-color: #efefef;
  background-image: none;
  color: #818181;
}
/*========================= for special widgets =========================*/
/* Input boxes with an arrow (for a drop down) */
.larson .dijitComboBox .dijitArrowButtonInner {
  background-image: url("images/commonFormArrows.png");
  background-position: -35px 53%;
  background-repeat: no-repeat;
  margin: 0;
  width: 16px;
  border: 1px solid rgba(255, 255, 255, 0);
}
.larson .dijitToolbar .dijitComboBox .dijitArrowButtonInner {
  border: none;
}
.larson .dijitToolbar .dijitComboBox .dijitArrowButtonInner {
  border: none;
}
/* Add 1px vertical padding to the <input> where user types and the validation icon,
   to match the 1px border on arrow button */
.larson .dijitTextBox .dijitInputInner, .larson .dijitTextBox .dijitValidationContainer {
  padding: 1px 0;
}
.larson .dijitComboBox .dijitButtonNode {
  background-color: #efefef;
  background-repeat: repeat-x;
}
/* Arrow "hover" effect:
 * The arrow button should change color whenever the mouse is in a position such that clicking it
 * will toggle the drop down.   That's either (1) anywhere over the ComboBox or (2) over the arrow
 * button, depending on the openOnClick setting for the widget.
 */
.larson .dijitComboBoxOpenOnClickHover .dijitButtonNode, .larson .dijitComboBox .dijitDownArrowButtonHover {
  background-color: #d4d4d4;
}
.larson .dijitComboBoxOpenOnClickHover .dijitArrowButtonInner, .larson .dijitComboBox .dijitDownArrowButtonHover .dijitArrowButtonInner {
  background-position: -70px 53%;
}
/* Arrow Button change when drop down is open */
.larson .dijitComboBox .dijitHasDropDownOpen {
  background-color: #dcdcdc;
  background-position: 0 -177px;
  padding: 1px;
}
.larson .dijitComboBox .dijitHasDropDownOpen .dijitArrowButtonInner {
  background-position: -70px 53%;
  border: 0 none;
}
/* disabled state */
.larson div.dijitComboBoxDisabled .dijitArrowButtonInner {
  /* specific selector set to override background-position setting from Button.js
	 * (.larson .dijitComboBoxDisabled .dijitArrowButtonInner) */

  background-position: 0 50%;
  background-color: #efefef;
}
/*========================= hacks for browsers =========================*/
/* it seems the input[type="hidden"] has a height (16px) too... this may cause the widget's height calculate error */
.dj_ff3 .larson .dijitInputField input[type="hidden"] {
  display: none;
  height: 0;
  width: 0;
}
/* ie6 doesn't support transparent background img */
.dj_ie6 .larson .dijitTextBox, .dj_ie6 .larson .dijitComboBox .dijitButtonNode {
  background-image: none;
}
.dj_borderbox .larson .dijitComboBox .dijitHasDropDownOpen .dijitArrowButtonInner {
  width: 18px;
}
.dj_borderbox .larson .dijitComboBoxFocused .dijitHasDropDownOpen .dijitArrowButtonInner {
  width: 16px;
}
